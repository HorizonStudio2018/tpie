cmake_minimum_required(VERSION 2.6)

project(tpie)

include_directories(.)
add_definitions(-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE)

#### CONFIG.H Checks:
include(CheckIncludeFiles)

if(NOT WIN32) 
	add_definitions("-Wall -Wextra")
endif(NOT WIN32)

if(WIN32)
	add_definitions("-DWIN32_LEAN_AND_MEAN")
endif(WIN32)

set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules/")
#### Dependencies
## Boost
set(Boost_ADDITIONAL_VERSIONS "1.40.0" "1.40" "1.41" "1.41.0" "1.42" "1.42.0" "1.43" "1.43.0" "1.44" "1.44.0" "1.45" "1.45.0")
set(Boost_USE_MULTITHREADED ON)
if(WIN32)
	set(Boost_USE_STATIC_LIBS    ON)
endif(WIN32)
find_package(Boost COMPONENTS date_time thread filesystem system)

# Boost 1.44 defaults to filesystem interface version 2, but we use version 3.
set(BOOST_FILESYSTEM_VERSION 3)

if(TPIE_FRACTIONDB_DIR_INL) 
  include_directories(${TPIE_FRACTIONDB_DIR_INL})
endif(TPIE_FRACTIONDB_DIR_INL)

if(Boost_FOUND)
    include_directories(${Boost_INCLUDE_DIRS})
    link_directories ( ${Boost_LIBRARY_DIRS} )
endif(Boost_FOUND)

check_include_files("unistd.h" TPIE_HAVE_UNISTD_H)
check_include_files("sys/unistd.h" TPIE_HAVE_SYS_UNISTD_H)

# Ryan Pavlik's Git revision description helper
# http://stackoverflow.com/a/4318642
include(GetGitRevisionDescription)
get_git_head_revision(GIT_REFSPEC GIT_COMMIT)

include_directories(${CMAKE_CURRENT_BINARY_DIR})

if (CMAKE_BUILD_TYPE) 
  string(TOUPPER ${CMAKE_BUILD_TYPE} bt)
  string(REGEX MATCH " -DNDEBUG " TPIE_NDEBUG " ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${bt}} ")
else()
  option(TPIE_NDEBUG "Disable debugging information" ON)
endif()

set(S ${CMAKE_CURRENT_SOURCE_DIR}/cpp0xtest)
set(D ${CMAKE_CURRENT_BINARY_DIR}/cpp0xtest)
try_compile(TPIE_CPP_VARIADIC_TEMPLATES ${D}/variadic_templates ${S}/variadic_templates.cpp)
try_compile(TPIE_CPP_RVALUE_REFERENCE ${D}/rvalueref ${S}/rvalueref.cpp)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/tpie/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/tpie/config.h)
add_subdirectory(tpie)

add_subdirectory(doc)

option(COMPILE_TEST "Compile test programs" ON)
option(TPL_LOGGING "Enable tpie logging." ON)
option(TPIE_THREADSAFE_MEMORY_MANAGEMNT "Thread safe memory managment" ON)
option(TPIE_FRACTION_STATS "Output fraction statistics" OFF)
option(TPIE_DEPRECATED_WARNINGS "Enable warnings for deprecated classes, methods and typedefs" OFF)
option(TPIE_PARALLEL_SORT "Enable parallel quick sort implementation" OFF)

if (COMPILE_TEST)
	ENABLE_TESTING()
	add_subdirectory(test)
	add_subdirectory(apps)
	add_subdirectory(example)
endif (COMPILE_TEST)
