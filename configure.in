dnl Copyright (c) 1994 Darren Erik Vengroff
dnl
dnl File: configure.in
dnl Author: Darren Erik Vengroff <darrenv@eecs.umich.edu>
dnl Created: 10/13/94
dnl 
dnl $Id: configure.in,v 1.5 1994-11-03 16:01:43 dev Exp $
dnl
dnl Macro file for autoconfig for the TPIE system.
dnl 
AC_INIT(include/ami.h)
AC_CONFIG_HEADER(include/config.h)
AC_REVISION($Revision: 1.5 $)dnl
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_RANLIB
dnl
dnl Check for OSF/1.
define(AC_OSF,
[AC_CHECKING(for OSF/1)
AC_BEFORE([$0], [AC_COMPILE_CHECK])AC_BEFORE([$0], [AC_TEST_PROGRAM])AC_BEFORE([$0], [AC_HEADER_EGREP])AC_BEFORE([$0], [AC_TEST_CPP])AC_PROGRAM_EGREP(yes,
[#include <standards.h>
#ifdef _OSF_SOURCE
  yes
#endif
], 
AC_VERBOSE(detected.)
OSF1=1,
AC_VERBOSE(not detected.)
OSF1=0)
])dnl
AC_SUBST(OSF1)
dnl
AC_OSF
dnl Set the language to C when checking for functions so that we look
dnl for them as C functions and not as C++ functions (e.g. foo()
dnl becomes foo__Fv).
AC_LANG_C
AC_HAVE_FUNCS(mmap getrusage)
AC_LANG_CPLUSPLUS
AC_HAVE_HEADERS(strings.h string.h)
dnl
dnl A macro for searching for prototypes in header files.
dnl Unfortunately, not all library functions have prototypes
dnl in header files on all systems.
dnl
define(AC_PROTOTYPE,
[AC_PROVIDE([$0])AC_CHECKING([for $1() prototype in $2])
AC_HEADER_EGREP($1, $2,
[AC_DEFINE(HAVE_PROTOTYPE_]translit($1,a-z,A-Z)[)])])
dnl
AC_PROTOTYPE(mmap, sys/mman.h)
AC_PROTOTYPE(munmap, sys/mman.h)
AC_PROTOTYPE(ftruncate, sys/types.h)
dnl
dnl Enable or disable assertions and logging for the library and/or apps.
dnl
AC_ENABLE(assert-apps,AC_DEFINE(TP_ASSERT_APPS))
AC_ENABLE(assert-lib,AC_DEFINE(TP_ASSERT_LIB))
AC_ENABLE(log-apps,AC_DEFINE(TP_LOG_APPS))
AC_ENABLE(log-lib,AC_DEFINE(TP_LOG_LIB))
dnl
AC_OUTPUT(Makefile apps/Makefile lib/Makefile lib/src/Makefile)



