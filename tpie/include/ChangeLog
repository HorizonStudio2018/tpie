Sun Jun 23 22:15:58 2002 Octavian Procopiuc (tavi)
	
	* bte_stream_mmap.h: fixed a bug that was causing core dump when
	closing a read-only stream.
	
Mon Jan 14 11:33:13 2002 Octavian Procopiuc (tavi)

	* general: new naming convention: all files dealing with bte
	streams are called bte_stream* instead of bte*; all files related
	to ami streams are called ami_stream* instead of ami*; mmb streams
	are now called mmap streams; all macro definitions have been
	changed accordingly.

	* general: new statistics mechanism. Feedback is needed to refine it.
	
	* ami_stream.h: new wrapper for ami streams; replaces old ami.h,
	which now is wrapper for entire library, not just the streams
	part.

	* ami.h: now includes the ami block collection, the ami block and
	the ami btree; it is a front end to the entire library.
	
	* ami_imps.h: deprecated, moved its contents into ami_stream.h

	* ami_err.h: new file, contains the ami error codes.

	* bte_err.h: initial revision, contains the bte error codes.

	* bte.h: deprecated; moved its contents into bte_stream.h

	* bte_stream.h: initial revision, contains the old bte.h

	* mm_imps.h: deprecated; moved its contents in mm.h

	* bte_base_stream.h: deprecated; renamed bte_stream_based.h

	* ami_single.h: deprecated; renamed ami_stream_single.h

	* ami_base.h: deprecated; renamed ami_stream_base.h

	* bte_ufs.h: deprecated; renamed bte_stream_ufs.h

	* bte_mmb.h: deprecated; renamed bte_stream_mmap.h

	* bte_stdio.h: deprecated; renamed bte_stream_stdio.h

	* ami_ptr.h: deprecated; was not used or useful

	* counter.h: deprecated; was not used or useful

	* bte_stream_ufs.h: fixed an error that was causing two blocks
	instead of one to be allocated, which caused errors in sorting
	routine.

	* bte_stream_base.h: BTE_base_stream is now called
	BTE_stream_base. Added generic base class for streams, in
	order to have global statistics. Introduced new statistics. Moved
	a lot of the header checking code from bte implementations (ufs,
	mmb) here. Moved register_memory_* functions from bte
	implementations here. get_status() is now called status(), to be
	consistent with bte collections. 

	* ami_stream_base.h: AMI_base_stream is now called
	AMI_stream_base. Reintroduced status.

	* ami_stream_single.h: introduced global statistics (counted using
	the BTE streams).

	* tpie_stats.h, tpie_stats_stream.h: initial revision; new
	statistics mechanism.
	* tpie_stats_coll.h, tpie_stats_tree.h:
	initial revision.	

	* bte_mmb_stats.h, bte_stats.h: deprecated; changed to new
	statistics mechanism (see tpie_stats*.h files.)
	
Thu May 17 19:29:14 2001 Octavian Procopiuc (tavi)

	* ami_block.h, ami_block_base.h: Initial revision.

	* bte_coll.h, bte_coll_mmb.h, bte_coll_base.h, bte_coll_ufs.h: 
	Initial revision.

	* ami_coll.h, ami_coll_base.h, ami_coll_single.h: Initial revision.

Fri Oct 22 19:12:08 1999 Octavian Procopiuc (tavi)

	* tpie_log.h: added LOG_APP_DEBUG level and corresponding macros, 
	for messages logged by applications. Also added LOG_SET_THRESHOLD 
	macro, for changing the threshold level.
	
	* quicksort.h: fixed a bug in quicksort (which allowed the recursion 
	to go all the way down, instead of stopping at a preset value, after 
	which insertion_sort would be called). Also changed the value where 
	quicksort bottoms out to 20, based on experiments on various machines.

Sun Mar 28 04:15:34 1999 Rakesh Barve (rbarve)

	* stdio_stack.h: Initial revision.
	
Wed Feb  3 13:14:55 1999 Octavian Procopiuc (tavi)

	* almost_all_files: Removed template instantiations and related macros.
	
Sun Oct 26 18:13 1997 Lars Arge (large)

	* bte_mmb.h: Same bug as in seek() fixed in truncate().

Sun Oct 26 16:10 1997 Lars Arge (large)
	
	* bte_mmb.h: Fixed a bug in seek() - check to see if correct block
	is mapped in added.
	
Thu May 22 22:40 1997 Lars Arge (large)

	* quicksort.h: Fixed an off-by-one error in all the insertion_sort
	functions. Inserted "extern "C" long int random(void)" to avoid
	warning during compilation (random() used).

	* ami_single.h: Initialized r_only variable on creation. Inserted
	seek(0) in new_substream.

	* bte_mmb.h: Changed >= to <= in write_item.

	* bte_ufs.h: Small typographical change.

	* bte_stdio.h: Quick bug-fix hack in stream_len() - need to look
	at the real problem (header block not a block) later!

	* ami_scan_mac: Removed rewind of output stream.

	
	
Thu May 22 14:47 1997 Lars Arge (large)

	* There is a bog hole in time here, but no we start describing
	changes again!


	
Thu Sep 29 13:13:15 1994  Darren Erik Vengroff  (darrenv@lazyboy)

	* quicksort.h, pqueue.h, bte_ufs.h, ami_sort_single.h, ami_ptr.h,
	ami_device.h: 
	Initial revision

	* bte_mmb.h: Added BTE_stream_mmb_base.

	* bte_base_stream.h: Added query of available streams.

	* ami_single.h: Misc. minor changes and updates.

	* ami_merge.h: AMI_partition_and_merge done and apparently working.

	* ami_imps.h:
	Got rid of AMI_IMP_STDIO, which was bogus at the AMI level and fixed
	the default to be AMI_IMP_SINGLE.

	* ami_base.h: Added AMI_ERROR_INSUFFICIENT_AVAILABLE_STREAMS.

	* Makefile: All makefiles still need work.

	* ami_sort.h: Initial revision

Thu Sep 29 09:04:13 1994  Darren Erik Vengroff  (darrenv@lazyboy.eecs.umich.edu)

	* A basic implementation of quicksort for use in core by
	AMI_sort() on streams or substreams that are small enough.

	* bte_ufs.h: It has not been tested in a while and problably needs
	updates to add new virtual functions to become functional again.

	* bte_mmb.h: Added a base class for all streams
	(BTE_stream_mmb_base) which keeps track of available streams in
	the system to avoid running out e.g. in merging.

Thu Sep 29 12:57:28 1994  Darren Erik Vengroff  (darrenv@lazyboy)

	* Makefile: All makefiles still need work.

	* ami_sort.h: Initial revision

Thu Sep 29 08:57:58 1994  Darren Erik Vengroff  (darrenv@lazyboy.eecs.umich.edu)

	* ami_base.h: Added AMI_ERROR_INSUFFICIENT_AVAILABLE_STREAMS for
	cases when the OS willl not allow us to have enough streams to
	perform an operation.

Tue Sep 27 09:29:09 1994  Darren Erik Vengroff  (darrenv@lazyboy.eecs.umich.edu)

	* Makefile (ami_scan.h): changed cp to cat > to aboid permission
	problems when ami_scan.h.head is checked in and thus read only.

Sat Sep 17 13:17:20 1994  Darren Erik Vengroff  (darrenv@lazyboy.eecs.umich.edu)

	* ami_merge.h: Added main_mem_operate() member function to class
        AMI_merge_base to handle bottoming out.
	(AMI_main_mem_merge): Broke it out of partition_and_merge() since
	it is useful in other types of merges as well.  Essestially it
	does some error checking and then calls the main_mem_operate()
	member function of the merge management object.

Wed Aug 31 13:44:48 1994  Darren Erik Vengroff  (darrenv@lazyboy.eecs.umich.edu)

	* tpie_assert.h (TP_DEBUG_OUT): changed the name form TP_DEBUG_STR
	
	(tp_assert): changed to log msg by itself so it need not be a
	string.  It can also be a sequence of items separated by <<
	operators. 

Tue Aug 30 13:17:30 1994  Darren Erik Vengroff  (darrenv@lazyboy.eecs.umich.edu)

	* bte_mmb.h (map_current): Fixed a serious bug that was setting
	current = curr_block.  This was a problem when the current block
	was invalid but the location of the current object in the stream
	was not at the beginning of the block, as in a newly created
	substream.

Fri Jun 10 11:46:10 1994  Darren Erik Vengroff  (dev@rhine.cs.duke.edu)

	* ami_scan.h.tail: Added a template for AMI_copy_stream() to
	scan using an identity object.

Wed Jun  8 09:53:21 1994  Darren Erik Vengroff  (dev@rhine.cs.duke.edu)

	* bte_mmb.h: BTE_stream_mmb is now properly declared with
	public base class BTE_base_stream so that standard pointer
	conversion is done.

	* ami_single.h: AMI_stream_single is now properly declared with
	public base class AMI_base_stream so that standard pointer
	conversion is done.

	* ami_scan_mac.h (__SPARM_BASE): Changed AMI_STREAM to
	AMI_base_stream now that sub_classes of AMI_base_stream are
	properly declared public.

	* bte_imps.h: Removed erroneous comment now that sub_classes of
	AMI_base_stream are properly declared public.

	* ami_imps.h: Removed erroneous comment now that sub_classes of
	AMI_base_stream are properly declared public.

	* ami_base.h: Added enum AMI_stream_type and added a virtual
	psuedo-constructor for substreams.

Tue Jun  7 09:57:43 1994  Darren Erik Vengroff  (dev@rhine.cs.duke.edu)

	* ami_single.h (read_item): Now returns AMI_ERROR_END_OF_STREAM if
	the BTE returns BTE_ERROR_END_OF_STREAM.

	* ami_merge.h (AMI_merge): Fixed bug where EOS from read_item was
	being returned to our called.

Mon Jun  6 09:50:16 1994  Darren Erik Vengroff  (dev@gypsum.cs.duke.edu)

	* bte_mmb.h: Added logical block size, which can be an integral
	multiple of os_blocksize.  It is currently specified via
	BTE_MMB_LOGICAL_BLOCKSIZE_FACTOR, but a more elegant mechanism
	employing an optional argument to the constructors (defaulted to a
	reasonable value) is in the works.

Fri Jun  3 14:10:41 1994  Darren Erik Vengroff  (dev@rhine.cs.duke.edu)

	* bte_stdio.h: Added simple memory manager calls to register the
	allocation and deallocation of memory for stdio streams. 

Thu Jun  2 14:11:20 1994  Darren Erik Vengroff  (dev@gypsum.cs.duke.edu)

	* bte_imps.h: #include <bte_stdio.h> now lower case.

	* bte_mmb.h (BTE_stream_mmb): Adjusted the mode argument to
	::open() in the case where we try to create a new file.

	* tpie_log.h (LOG_DEBUG_INFO): changed TP_LOG_DEBUG to
	TP_LOG_DEBUG_INFO to match enum.

Thu Jun  2 09:20:54 1994  Darren Erik Vengroff  (dev@rhine.cs.duke.edu)

	* ami.h: Now includes ami_merge.h to load the merging code.

Tue May 31 20:26:25 1994  Darren Erik Vengroff  (dev@rhine)

	* tpie_log.h, bte_mmb.h, bte_base_stream.h:
	First implementation of a simple registration based memory manager.

Tue May 31 09:24:24 1994  Darren Erik Vengroff  (dev@rhine.cs.duke.edu)

	* bte_mmb.h (register_memory_allocation): Wrote this method as an
	iterface to the MM.
	(BTE_stream_mmb): Added memory registration via
	register_memory_allocation().
	(register_memory_deallocation): Wrote it to handle deallocation.

	* bte_base_stream.h: Added a new error code
	BTE_ERROR_MEMEORY_ERROR for reporting MM errors.

Mon May 30 11:11:19 1994  Darren Erik Vengroff  (dev@rhine.cs.duke.edu)

	* bte_mmb.h: Now includes the registration based memory manager.

	* mm_imps.h: Created it.  For the moment it is just a shell that
	verifies that the registration based implementation is selected.

	* mm_base.h: Created it.  The MM_base_manager class is empty for
	the moment.

	* mm.h: Created it.  Modeled after ami.h

	* mm_register.h: Created the basics of MM_register, a simple MM
	class for BTE implementations that rely on the OS to allocate most
	of their memory.

