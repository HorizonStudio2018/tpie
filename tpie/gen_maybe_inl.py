# template<typename T0> void construct(T0 t0) { if(m_constructed) throw maybe_exception("Can not construct a maybe object already constructed"); object = new T(t0);  m_constructed = true; }

def gen_interface(argc, argv):
    L=["typename T%d"%i for i in range(argc)]
    M=[]
    N=["t%d"%i for i in range(argc)]
    for i in range(argc):
        if (1 << i) & argv:
            M.append("const T%d& t%d"%(i,i))
        else:
            M.append("T%d& t%d"%(i,i))
    print "template <%s> void construct(%s) {assert_not_constructed(); object = new T(%s);  m_constructed = true;}"%(", ".join(L), ", ".join(M), ", ".join(N))
    

if __name__ == "__main__":
    print "// This file was generated by gen_maybe_inl.py, do not edit"
    print    

    print "void construct() {assert_not_constructed(); object = new T();  m_constructed = true;}"

    for i in range(1, 9):
        for j in range(2**i):
            gen_interface(i, j)
    
