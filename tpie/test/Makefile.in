# Copyright (c) 1994 Darren Erik Vengroff

# $Id: Makefile.in,v 1.5 1994-09-26 19:20:29 darrenv Exp $

# Makefile for TPIE test applications.

# Use gmake on this Makefile.  It relies on the default rules, and 
# Use gmake -p to see the default rules.

TPIEINC = ../include

TPIELIBDIR = ../lib

TPIELIB = $(TPIELIBDIR)/libtpie.a

ifdef DEBUG_APPS
LOG_APPS = 1
ASSERT_DEBUG_APPS = 1
endif

CXXFLAGS = -Wall #-v

ifdef OPTIMIZE_APPS
CXXFLAGS += -O
CFLAGS += -O
endif

ifdef SYM_DEBUG_APPS
CXXFLAGS += -gstabs+ 
CFLAGS += -gstabs
endif

CPPFLAGS = -I$(TPIEINC) 

ifdef LOG_APPS
CPPFLAGS += -DTPL_LOGGING
endif

ifdef ASSERT_DEBUG_APPS
CPPFLAGS += -DDEBUG_ASSERTIONS -DDEBUG_STR -DDEBUG_CERR
endif

# The loader in OSF 1.x is flakey.  Using -lm generates an executable
# that /bin/loader refuses to load, so we just load the library
# explicitly.
#
# I've tried this on two machines, one running 1.2 and one running
# 1.3, and had the same problem.

LDLIBS =  -L$(TPIELIBDIR) -ltpie /usr/lib/libm.a #-lm

CC = gcc
CCFLAGS = $(CXXFLAGS)

# The various test applications.

FSCAT=bte_fs_cat

MMAP_TEST = mmb_stream_test

AMI_SCAN = ami_scan

AMI_MERGE = test_ami_merge

BMS = binary_merge_sort

PM = partition_and_merge

QS = qsort_test

APPS=$(PM) $(QS) #$(BMS) #(AMI_SCAN) $(AMI_MERGE) $(BMS)

UP_TO_DATE = .up_to_date

$(UP_TO_DATE): $(APPS)
	touch $@

%:%.o
	$(LINK.cc) $< $(LOADLIBES) $(LDLIBS) -o $@
	
%:%.cpp
	$(LINK.cc) $< $(LOADLIBES) $(LDLIBS) -o $@

%: $(TPIEINC)$(UP_TO_DATE) $(TPIELIBDIR)$(UP_TO_DATE)

$(TPIEINC)$(UP_TO_DATE): $(TPIEINC)*
	$(MAKE) -C $(TPIEINC) $(UP_TO_DATE)

$(TPIELIBDIR)$(UP_TO_DATE): $(TPIELIBDIR)*
	$(MAKE) -C $(TPIELIBDIR) $(UP_TO_DATE)

$(BMS): $(BMS).cpp int_cmp.o
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(PM): $(PM).o int_cmp.o
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(QS): $(QS).cpp int_cmp.o
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

.PHONY : clean

clean:
	-rm *.o
	-rm $(APPS)
	-rm $(UP_TO_DATE)

