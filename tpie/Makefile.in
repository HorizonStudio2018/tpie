# Copyright (c) 1994 Darren Erik Vengroff
#
# The Makefile for the complete TPIE system.
#
# $Id: Makefile.in,v 1.5 1994-10-04 18:59:57 darrenv Exp $
#

########################################################################
# FLAGS TO CONTROL SYSTEM PARAMETERS.
########################################################################

# Define if the library functions should write to the log.
#LOG_LIBRARY = 1

# Define if the library functions should include debugging code.
#DEBUG_LIBRARY = 1

# Define if the library code should be optimized.
OPTIMIZE_LIBRARY = 1

# Define if the library code should be profilable.
#PROFILE_LIBRARY = 1

# Define if the apps should write to the log.
#LOG_APPS = 1

# Define if the apps should include debugging code.
#DEBUG_APPS = 1

# Define if the apps should be optimized.
OPTIMIZE_APPS = 1

# Define if the apps should be profilable.
#PROFILE_APPS = 1

########################################################################
# END OF USER SETTABLE FLAGS.
########################################################################

SHELL = /bin/csh

# A file that is touched when a directory is rebuilt.  We can look at
# this file form a higher level to see if we need to rebuild the
# directory.
UP_TO_DATE = .up_to_date

# Define the two different kinds of debugging: symbolic, and
# assertion.  Normally both are turned on and off, but they can
# be controlled individually by setting them on the make command
# line. 

ifdef DEBUG_LIBRARY
SYM_DEBUG_LIBRARY = 1
ASSERT_DEBUG_LIBRARY = 1
endif

ifdef DEBUG_APPS
SYM_DEBUG_APPS = 1
ASSERT_DEBUG_APPS = 1
endif

# Send all variables into recursive makes.
export

# The directories storing the components of the system

LIBPATH = ./lib/

LIBSRCPATH = $(LIBPATH)src/

APPSPATH = ./apps/

INCPATH = ./include/

usage:
	echo make [ all | inc | lib | apps ]

all: inc lib apps


inc:
	$(MAKE) -C $(INCPATH) $(UP_TO_DATE)

lib: 
	$(MAKE) -C $(LIBSRCPATH) $(UP_TO_DATE)
	$(MAKE) -C $(LIBPATH) $(UP_TO_DATE)

apps: 
	$(MAKE) -C $(APPSPATH) $(UP_TO_DATE)


$(UP_TO_DATE): $(INCPATH)$(UP_TO_DATE) $(LIBPATH)$(UP_TO_DATE) 	\
	       $(APPSPATH)$(UP_TO_DATE)
	touch $@

$(APPSPATH)$(UP_TO_DATE): $(APPSPATH)*.cpp $(LIBPATH)$(UP_TO_DATE)	\
	                  $(INCPATH)$(UP_TO_DATE)
	$(MAKE) -C $(APPSPATH) $(UP_TO_DATE)

$(LIBPATH)$(UP_TO_DATE): $(LIBPATH)* $(INCPATH)$(UP_TO_DATE)
	$(MAKE) -C $(LIBPATH) $(UP_TO_DATE)

$(INCPATH)$(UP_TO_DATE): $(INCPATH)*
	$(MAKE) -C $(INCPATH) $(UP_TO_DATE)

.PHONY : clean lib inc apps usage all

clean:
	-rm $(UP_TO_DATE)
	$(MAKE) -C $(INCPATH) $@
	$(MAKE) -C $(LIBPATH) $@
	$(MAKE) -C $(APPSPATH) $@


