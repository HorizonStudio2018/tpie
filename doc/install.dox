/**
\page install Compiling and installing TPIE

\section sec_install Installation on Linux

You will need Git, CMake, Boost and a C++ compiler in order to use TPIE. On a
modern Linux system, the following steps will suffice.

First, clone the <a href="https://github.com/thomasmoelhave/tpie">git repository</a> and
checkout the branch or tag you wish to compile:

\verbatim
git clone git://github.com/thomasmoelhave/tpie.git
cd tpie
git checkout master
\endverbatim

Now, create a build directory and run CMake followed by make.

\verbatim
mkdir build
cd build
cmake -D CMAKE_BUILD_TYPE:STRING=Release ..
make
\endverbatim

This will generate the static library \c libtpie.a in the \c build/tpie folder.
The unit test executables are placed in the \c test/unit folder and are prefixed
with the token \c ut-.
To run the unit tests, use CTest.

\verbatim
ctest
\endverbatim

Next, we use CPack to install TPIE.

\verbatim
cpack
# On .deb-based Linux distros:
sudo dpkg -i tpie-1.0.0-Linux.deb
# On other Linux distros:
cd /usr/local
sudo tar xvf path/to/tpie/build/tpie-1.0.0-Linux.tar.gz
\endverbatim

To link your application with TPIE, may manually specify the linker flags
<tt>-ltpie -lboost_system -lboost_filesystem -lboost_date_time
-lboost_thread</tt>, or you may use the example \c CMakeLists.txt from the
\c tpie/example/ directory to find the TPIE installation using CMake.

\section sec_installwin Installation on Windows

As above, clone the <a href="https://github.com/thomasmoelhave/tpie">git repository</a> at
<tt>git://github.com/thomasmoelhave/tpie.git</tt>, perhaps using TortoiseGit, and set
up the build environment using CMake, perhaps using the CMake GUI. TPIE is
known to work with the Microsoft Visual Studio 2008 and 2010 compilers. Be sure
to select a 64-bit build when your platform supports it.
*/
